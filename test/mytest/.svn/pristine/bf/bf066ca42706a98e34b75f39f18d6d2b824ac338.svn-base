package com.boyaa.testholdemth.cases;

import java.awt.image.BufferedImage;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.boyaa.rainbow2.RainbowReporter;
import com.boyaa.rainbow2.RainbowTestCase;
import com.boyaa.rainbow2.annotations.CaseDesc;
import com.boyaa.rainbow2.utils.ImageTools;
import com.boyaa.testholdemth.business.CommonBusiness;
import com.boyaa.testholdemth.uilib.LobbyPage;
import com.boyaa.testholdemth.uilib.LoginPage;
import com.boyaa.testholdemth.uilib.PersonalInformationPage;


@Listeners({ com.boyaa.rainbow2.RainbowListener.class })
@Test(description="This suite is used to test the head shwo change")
public class ChangeHeadShow extends RainbowTestCase {		
	private LoginPage loginPage = null ;
	private LobbyPage lobbyPage = null ;
	PersonalInformationPage personalInformationPage = null;
	public ChangeHeadShow() {
		super();
	}
	@BeforeMethod
	public void setUp() throws Exception {
		super.setUp();		
		loginPage = new LoginPage();
		lobbyPage = new LobbyPage();
		personalInformationPage = new PersonalInformationPage();
		loginPage.enterTestEnv();
	}
	
	@AfterMethod
	public void tearDown() throws Exception {
		super.tearDown();
	}
	
	@CaseDesc(id="change_headshow4", name="change_sex1")
	@Test(description="test change sex")
	public void test_change_sex1() throws InterruptedException{	
		loginPage.loginAsGuestWithTag("for_change_headshow_with_default_head");
		lobbyPage.waitSubElement("个人头像图标").click();
		//保存编辑前的图片以便后面检查点使用
		BufferedImage sexImage_before = ImageTools.getElementImage(personalInformationPage.waitSubElement("性别字段图标"));
		BufferedImage headImage_before = ImageTools.getElementImage(personalInformationPage.waitSubElement("用户头像框"));	
		personalInformationPage.waitSubElement("编辑按钮").click();
		personalInformationPage.waitSubElement("性别选择框").click();
		personalInformationPage.waitSubElement("性别选择项").click();
		personalInformationPage.waitSubElement("性别昵称编辑确定按钮").click();
		//TODO 研发提供接口来识别这个[性别字段图标]为男性还是女性		
		//TODO Bug：修改性别后头像没有发生改变，已经告知业务部门：放入基础版本进行修订
		BufferedImage sexImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("性别字段图标"));	
		BufferedImage headImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("用户头像框"));		
		/*
		assertFalse(ImageTools.sameAs(sexImage_before, sexImage_after, 0.9), "期望：个性详情处，性别字段图标发生改变，实际：性别字段图标没有改变");	//表示相似度为90%
		assertFalse(ImageTools.sameAs(headImage_before, headImage_after, 0.9), "期望：个性详情处，原有头像发生改变，实际：原有头像没有改变");
		
		//保存编辑前的图片以便后面检查点使用
		sexImage_before = sexImage_after;
		headImage_before = headImage_after;
		personalInformationPage.waitSubElement("编辑按钮").click();
		personalInformationPage.waitSubElement("性别选择框").click();
		personalInformationPage.waitSubElement("性别选择项").click();
		personalInformationPage.waitSubElement("性别昵称编辑确定按钮").click();
		//保存编辑后的图片以便后面检查点使用
		sexImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("性别字段图标"));	
		headImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("用户头像框"));		
		assertFalse(ImageTools.sameAs(sexImage_before, sexImage_after, 0.9), "期望：个性详情处，性别字段图标发生改变，实际：性别字段图标没有改变");	//表示相似度为90%
		assertFalse(ImageTools.sameAs(headImage_before, headImage_after, 0.9), "期望：个性详情处，原有头像发生改变，实际：原有头像没有改变");
		*/
	}
	
	@CaseDesc(id="change_headshow5", name="change_sex1")
	@Test(description="change sex2")//更换已有头像账号的性别、女性更换男性或者男性更换女性、
	public void test_change_sex2() throws InterruptedException{	
		loginPage.loginAsGuestWithTag("for_change_headshow_with_custom_head");		
		lobbyPage.waitSubElement("个人头像图标").click();
		//保存编辑前的图片以便后面检查点使用
		BufferedImage sexImage_before = ImageTools.getElementImage(personalInformationPage.waitSubElement("性别字段图标"));
		BufferedImage headImage_before = ImageTools.getElementImage(personalInformationPage.waitSubElement("用户头像框"));	
		personalInformationPage.waitSubElement("编辑按钮").click();
		personalInformationPage.waitSubElement("性别选择框").click();
		personalInformationPage.waitSubElement("性别选择项").click();
		personalInformationPage.waitSubElement("性别昵称编辑确定按钮").click();
		//TODO 研发提供接口来识别这个[性别字段图标]为男性还是女性,目前暂时只能检查图片是否发生了变化	
		//保存编辑后的图片以便后面检查点使用
		BufferedImage sexImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("性别字段图标"));	
		BufferedImage headImage_after = ImageTools.getElementImage(personalInformationPage.waitSubElement("用户头像框"));		
		assertFalse(ImageTools.sameAs(sexImage_before, sexImage_after, 0.9), "期望：个性详情处，性别字段图标发生改变，实际：性别字段图标没有改变");	
		assertTrue(ImageTools.sameAs(headImage_before, headImage_after, 0.9), "期望：个性详情处，原有头像不变，实际：原有头像不变发生了改变");		
	}
	
	@CaseDesc(id="change_headshow6", name="change_name")
	@Test(description="test change name")//更换玩家的昵称
	public void test_change_name() throws InterruptedException{	
		loginPage.loginAsGuestWithTag("normal");		
		lobbyPage.waitSubElement("个人头像图标").click();		
		personalInformationPage.waitSubElement("编辑按钮").click();
		String nickname = "GUEST_"+ RainbowReporter.formatCurrentTime("MMddHHmmss");
		getDriver().sendKeysWithClear(personalInformationPage.waitSubElement("昵称文本编辑框"), nickname);	
		getDriver().sleep(2*1000);
		personalInformationPage.waitSubElement("性别昵称编辑确定按钮").click();		
		getDriver().sleep(2*1000);
		assertEquals(personalInformationPage.waitSubElement("昵称文本").getText(), nickname, "改变昵称不成功");			
	}
	
	
	
}
