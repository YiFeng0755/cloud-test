package com.boyaa.testholdemhk.uilib;



import java.util.List;




import org.testng.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import com.boyaa.rainbow2.RainbowDriver;
import com.boyaa.rainbow2.RainbowElement;
import com.boyaa.testholdemhk.business.CommonBusiness;
import com.boyaa.testholdemhk.uilib.SitAndGoRoomPage;
import com.boyaa.testholdemhk.uilib.RoomPage.PayDialog;
public class IntegralExchangePage extends RainbowElement {
	public RainbowDriver rd=null;
	public CommonBusiness cb=null;
	/*
	 * @author :FoxHu
	 * 获取指定道具的index，text 为道具名字
	 */
	 public IntegralExchangePage(){
	 	rd = RainbowDriver.getRainbowDriver();
	 	cb = new CommonBusiness();
	 }
	 public int getTheIndexByNameInList(String text){
		 List<WebElement> lt =  waitSubElements("兑换道具名字");
		 for(int i=0;i<=(lt.size()-1);i++){ 
			 if(lt.get(i).getText().equals(text)){
				 return i;
			 }
		 }
		 return -1;
	 }

	 
	 
	 /*
	  * @author :FoxHu
	  * 点击指定道具的兑换按钮，text 为道具名字
	  */
	 public void clickSpecificExchangeButtou(String text){
		int i = getTheIndexByNameInList(text);
		Assert.assertTrue(i>=0, "没有找到名字为："+text+",的道具兑换项");
		// waitSubElementWithIndex("兑换按钮", i).click();
	 }
	/* 
	public int getCanExchangeItemCount(String text){
		int i = getTheIndexByNameInList(text);
		String str= (waitSubElementWithIndex("兑换道具描述",i).getText().split("เหลือ"))[1].toString().replace(" ", "");
	    int count=cb.fromStringGetNumber(str);
	    return count;
		}
	*/
	public void text(){
		rd.findElement(By.name("เกียรติของคุณยังไม่พอ สู้ๆนะ !!"));
		}
	/*
	 public boolean checkSpecificExchangeButtouStat(String text){
			int i = getTheIndexByNameInList(text);
			Assert.assertTrue(i>=0, "没有找到名字为："+text+",的道具兑换项");
		boolean bl = waitSubElementWithIndex("兑换按钮", i).isEnabled();		
			return bl ;
	}
	*/
	 
	public  void goBack(long timeout) throws InterruptedException{
		long endtime =System.currentTimeMillis() + timeout;
		while(System.currentTimeMillis()<=endtime){
			rd.pressBack();
			SitAndGoRoomPage sitAndGoRoomPage =new SitAndGoRoomPage();
			sitAndGoRoomPage.isPresent(3*1000);
			//sleep(2*1000);
		}
	}
	 
	public ConfirmPage confirmPage() {
			return new ConfirmPage();
	}
	public class ConfirmPage extends RainbowElement{
		
	}
}
