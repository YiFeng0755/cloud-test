package com.boyaa.testdalianhall.cases;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.boyaa.rainbow2.annotations.CaseDesc;
import com.boyaa.testdalianhall.business.CommonBusiness;
import com.boyaa.testdalianhall.business.CommonBusiness.ServerEnvironment;
import com.boyaa.testdalianhall.uilib.HallPage;
import com.boyaa.testdalianhall.uilib.RankListPage;
import com.boyaa.testdalianhall.uilib.ShopPage;


@Listeners({ com.boyaa.rainbow2.RainbowListener.class })
@Test(description="排行榜")
public class RankListTest extends BaseTestCase {
//	private static CommonBusiness cb = null;
	private HallPage hallPage = null;
	private String currentMid = "";
	public RankListTest() {
		super();
		
	}
	
	@BeforeMethod
	public void setUp() throws Exception{
		super.setUp();
		hallPage = new HallPage();
		CommonBusiness.SwitchToEnvironment(ServerEnvironment.PrePublicEnv);//切换到线上环境
		currentMid = CommonBusiness.getCurrentUserIdInHall();
	}
	
	@AfterMethod(alwaysRun=true)
	public void tearDown() throws Exception{
		super.tearDown();
	}

	@CaseDesc(id="DFHALL-1159", name="排行榜跳转入口(Phase I)")
	@Test(description="test_jumpToShop")
	public void test_jumpToShop() throws InterruptedException{
		hallPage.waitSubElement("排行榜按钮").click();
		RankListPage rankListPage = new RankListPage();
		assertTrue(rankListPage.isPresent(), "检查是否打开排行榜页面");
		
		Thread.sleep(2000);
		rankListPage.waitSubElement("快速提升排名按钮").click();
		assertTrue(new ShopPage().isPresent(), "检查是否打开商城页面");
	}
	
	@CaseDesc(id="DFHALL-1156", name="昨日今日(Phase I)")
	@Test(description="test_changeDay")
	public void test_changeDay() {
		hallPage.waitSubElement("排行榜按钮").click();
		RankListPage rankListPage = new RankListPage();
		assertTrue(rankListPage.waitSubElement("昨日今日切换按钮文字").getText().equals("昨日"), "检查昨日按钮是否显示");
		rankListPage.waitSubElement("昨日今日切换按钮").click();
		assertTrue(rankListPage.waitSubElement("昨日今日切换按钮文字").getText().equals("今日"), "检查今日按钮是否显示");
	}
	
	@CaseDesc(id="公共001", name="经验榜排名变动(Phase II)")
	@Test(description="test_changeExpOrder")
	public void test_changeExpOrder() {
		hallPage.waitSubElement("排行榜按钮").click();
		RankListPage rankListPage = new RankListPage();
		rankListPage.waitSubElement("经验榜TAB按钮").click();
//		int curExp = rankListPage.getExp();
		int curOrder = rankListPage.getOrder();
		
		CommonBusiness.setUserExp(currentMid, 300);
		rankListPage.waitSubElement("返回按钮").click();
		CommonBusiness.SwitchToEnvironment(CommonBusiness.ServerEnvironment.PrePublicEnv);
		hallPage.waitSubElement("排行榜按钮").click();
		rankListPage.waitSubElement("经验榜TAB按钮").click();
		assertTrue(rankListPage.getOrder() < curOrder, "检查经验值变动后排名发生了变化");
		
		CommonBusiness.setUserExp(currentMid, -300);
	}
	
	@CaseDesc(id="公共001", name="赚金榜排名变动(Phase II)")
	@Test(description="test_changeEarnMoneyOrder")
	public void test_changeEarnMoneyOrder() {
		hallPage.waitSubElement("排行榜按钮").click();
		RankListPage rankListPage = new RankListPage();
		rankListPage.waitSubElement("赚金榜TAB按钮").click();
		int curEarnMoney = rankListPage.getEarnMoney();
		int curOrder = rankListPage.getOrder();
		
		CommonBusiness.setUserEarnMoney(currentMid, curEarnMoney+2000);
		rankListPage.waitSubElement("返回按钮").click();
		CommonBusiness.SwitchToEnvironment(CommonBusiness.ServerEnvironment.PrePublicEnv);
		hallPage.waitSubElement("排行榜按钮").click();
		rankListPage.waitSubElement("赚金榜TAB按钮").click();
		assertTrue(rankListPage.getOrder() < curOrder, String.format("检查赚金值变动后赚金榜排名发生了变化:原排名为%d,新排名为%d", curOrder, rankListPage.getOrder()));
		
		CommonBusiness.setUserEarnMoney(currentMid, curEarnMoney);
	}
	
	@CaseDesc(id="公共001", name="富豪榜排名变动(Phase II)")
	@Test(description="test_changeMoneyOrder")
	public void test_changeMoneyOrder() {
		hallPage.waitSubElement("排行榜按钮").click();
		RankListPage rankListPage = new RankListPage();
		rankListPage.waitSubElement("富豪榜TAB按钮").click();
		int curMoney = rankListPage.getMoney();
		int curOrder = rankListPage.getOrder();
		
		CommonBusiness.setUserMoney(currentMid, curMoney+20000);
		rankListPage.waitSubElement("返回按钮").click();
		CommonBusiness.SwitchToEnvironment(CommonBusiness.ServerEnvironment.PrePublicEnv);
		hallPage.waitSubElement("排行榜按钮").click();
		rankListPage.waitSubElement("富豪榜TAB按钮").click();
		assertTrue(rankListPage.getOrder() < curOrder, "检查金币数变动后富豪榜排名发生了变化");
		
		CommonBusiness.setUserMoney(currentMid, curMoney);
	}

}
