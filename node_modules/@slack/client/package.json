{
  "_args": [
    [
      {
        "raw": "@slack/client@3.14.1",
        "scope": "@slack",
        "escapedName": "@slack%2fclient",
        "name": "@slack/client",
        "rawSpec": "3.14.1",
        "spec": "3.14.1",
        "type": "version"
      },
      "/var/stf"
    ]
  ],
  "_from": "@slack/client@3.14.1",
  "_id": "@slack/client@3.14.1",
  "_inCache": true,
  "_location": "/@slack/client",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/client-3.14.1.tgz_1507681147073_0.7450773436576128"
  },
  "_npmUser": {
    "name": "roach",
    "email": "roach@roach.wtf"
  },
  "_npmVersion": "4.4.4",
  "_phantomChildren": {
    "aws-sign2": "0.6.0",
    "aws4": "1.6.0",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "extend": "3.0.0",
    "forever-agent": "0.6.1",
    "form-data": "2.1.4",
    "har-validator": "2.0.6",
    "hawk": "3.1.3",
    "http-signature": "1.1.1",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.15",
    "node-uuid": "1.4.8",
    "oauth-sign": "0.8.2",
    "options": "0.0.6",
    "qs": "6.3.2",
    "stringstream": "0.0.5",
    "tough-cookie": "2.3.3",
    "tunnel-agent": "0.4.3",
    "ultron": "1.0.2"
  },
  "_requested": {
    "raw": "@slack/client@3.14.1",
    "scope": "@slack",
    "escapedName": "@slack%2fclient",
    "name": "@slack/client",
    "rawSpec": "3.14.1",
    "spec": "3.14.1",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@slack/client/-/client-3.14.1.tgz",
  "_shasum": "be3ff80ca2a4bd881b72ac9c2c3dd5bb7276b2a5",
  "_shrinkwrap": null,
  "_spec": "@slack/client@3.14.1",
  "_where": "/var/stf",
  "author": {
    "name": "Slack Technologies, Inc."
  },
  "bugs": {
    "url": "https://github.com/slackapi/node-slack-sdk/issues"
  },
  "dependencies": {
    "async": "^1.5.0",
    "bluebird": "^3.3.3",
    "eventemitter3": "^1.1.1",
    "https-proxy-agent": "^1.0.0",
    "inherits": "^2.0.1",
    "lodash": "^4.13.1",
    "pkginfo": "^0.4.0",
    "request": ">=2.0.0 <2.77.0",
    "retry": "^0.9.0",
    "url-join": "0.0.1",
    "winston": "^2.1.1",
    "ws": "^1.0.1"
  },
  "description": "A library for creating a Slack client",
  "devDependencies": {
    "chai": "^3.5.0",
    "codecov": "^1.0.1",
    "eslint": "^2.2.0",
    "eslint-config-airbnb": "^6.0.2",
    "istanbul": "^0.4.2",
    "jsdoc-to-markdown": "^1.3.7",
    "mocha": "^3.4.1",
    "mocha-lcov-reporter": "^1.0.0",
    "nock": "^7.2.2",
    "sinon": "^1.17.1"
  },
  "directories": {},
  "dist": {
    "shasum": "be3ff80ca2a4bd881b72ac9c2c3dd5bb7276b2a5",
    "tarball": "https://registry.npmjs.org/@slack/client/-/client-3.14.1.tgz"
  },
  "engines": {
    "node": ">= 0.12.x",
    "npm": ">= 1.1.x"
  },
  "gitHead": "47ce68916140b7d53e52deb9926c952397b770eb",
  "homepage": "https://github.com/slackapi/node-slack-sdk#readme",
  "keywords": [
    "slack"
  ],
  "license": "MIT",
  "main": "./index",
  "maintainers": [
    {
      "name": "aoberoi",
      "email": "aoberoi@gmail.com"
    },
    {
      "name": "johnagan",
      "email": "johnagan@gmail.com"
    },
    {
      "name": "roach",
      "email": "roach@roach.wtf"
    }
  ],
  "name": "@slack/client",
  "optionalDependencies": {},
  "readme": "# Node Library for the Slack APIs\n\n[![Build Status](https://travis-ci.org/slackapi/node-slack-sdk.svg?branch=master)](https://travis-ci.org/slackapi/node-slack-sdk)\n[![codecov](https://codecov.io/gh/slackapi/node-slack-sdk/branch/master/graph/badge.svg)](https://codecov.io/gh/slackapi/node-slack-sdk)\n[![npm (scoped)](https://img.shields.io/npm/v/@slack/client.svg)](https://www.npmjs.com/package/@slack/client)\n\nRead the [full documentation](https://slackapi.github.io/node-slack-sdk) for all the lovely details.\n\nThis module is a wrapper around the Slack [RTM](https://api.slack.com/rtm) and [Web](https://api.slack.com/web) APIs.\n\nIt will help you build on the Slack platform, from dropping notifications in channels to developing fully interactive bots. It provides the low level functionality you need to build reliable apps and projects on top of Slack's APIs.\nIt:\n\n - handles reconnection logic and request retries\n - provides reasonable defaults for events and logging\n - defines a basic model layer and data-store for caching Slack RTM API responses\n\nThis module does not attempt to provide application level support, _e.g._ regex matching and filtering of the\nconversation stream.\n\nMost Slack apps are interested in posting messages into Slack channels, and generally working with our [Web API](https://api.slack.com/web). Read on\nto learn how to use `node-slack-sdk` to accomplish these tasks. Bots, on the other hand, are a bit more complex,\nso we have them covered in [Building Bots](https://slackapi.github.io/node-slack-sdk/bots).\n\n# Installation\nOnce you have a working Node.js project, you can install the Slack Developer Kit as a dependency via npm:\n\n```sh\n$ npm install @slack/client --save\n```\n\n# Some Examples\n\nAll of these examples assume that you have set up a Slack [app](https://api.slack.com/slack-apps) or\n[custom integration](https://api.slack.com/custom-integrations), and understand the basic mechanics of working with the\nSlack Platform.\n\n## Posting a message with Incoming Webhooks\n\n[Incoming webhooks](https://api.slack.com/incoming-webhooks) are an easy way to get notifications posted into Slack with\na minimum of setup. You'll need to either have a custom incoming webhook set up, or an app with an incoming webhook\nadded to it.\n\n```js\nvar IncomingWebhook = require('@slack/client').IncomingWebhook;\n\nvar url = process.env.SLACK_WEBHOOK_URL || '';\n\nvar webhook = new IncomingWebhook(url);\n\nwebhook.send('Hello there', function(err, header, statusCode, body) {\n  if (err) {\n    console.log('Error:', err);\n  } else {\n    console.log('Received', statusCode, 'from Slack');\n  }\n});\n```\n\n## Posting a message with Web API\n\nYou'll need a Web API token to call any of the Slack Web API methods. For custom integrations, you'll get this\n[from the token generator](https://api.slack.com/docs/oauth-test-tokens), and for apps it will come as the final part\nof the [OAuth dance](https://api.slack.com/docs/oauth).\n\nYour app will interact with the Web API through the `WebClient` object, which requires an access token to operate.\n\n```js\nvar WebClient = require('@slack/client').WebClient;\n\nvar token = process.env.SLACK_API_TOKEN || '';\n\nvar web = new WebClient(token);\nweb.chat.postMessage('C1232456', 'Hello there', function(err, res) {\n  if (err) {\n    console.log('Error:', err);\n  } else {\n    console.log('Message sent: ', res);\n  }\n});\n```\n\n## Posting a message with the Real-Time Messaging API\n\nStarting a bot up requires a bot token (bot tokens start with `xoxb-`),\nwhich can be had either creating a [custom bot](https://my.slack.com/apps/A0F7YS25R-bots) or by creating an app with a\nbot user, at the end of the [OAuth dance](https://api.slack.com/docs/oauth). If you aren't sure path is right for you,\nhave a look at the [Bot Users documentation](https://api.slack.com/bot-users).\n\n```js\nvar RtmClient = require('@slack/client').RtmClient;\nvar CLIENT_EVENTS = require('@slack/client').CLIENT_EVENTS;\n\nvar bot_token = process.env.SLACK_BOT_TOKEN || '';\n\nvar rtm = new RtmClient(bot_token);\n\nlet channel;\n\n// The client will emit an RTM.AUTHENTICATED event on successful connection, with the `rtm.start` payload\nrtm.on(CLIENT_EVENTS.RTM.AUTHENTICATED, (rtmStartData) => {\n  for (const c of rtmStartData.channels) {\n\t  if (c.is_member && c.name ==='general') { channel = c.id }\n  }\n  console.log(`Logged in as ${rtmStartData.self.name} of team ${rtmStartData.team.name}, but not yet connected to a channel`);\n});\n\n// you need to wait for the client to fully connect before you can send messages\nrtm.on(CLIENT_EVENTS.RTM.RTM_CONNECTION_OPENED, function () {\n  rtm.sendMessage(\"Hello!\", channel);\n});\n\nrtm.start();\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/slackapi/node-slack-sdk.git"
  },
  "scripts": {
    "codecov": "npm run cover && codecov",
    "cover": "istanbul cover -x **/facets/*.js  --report lcovonly _mocha -- --recursive",
    "lint": "eslint . --ignore-path .gitignore",
    "make-docs": "node jsdoc.js",
    "make-slack-client-symlink": "mkdir -p $PWD/node_modules/@slack/client && ln -s $PWD/index.js $PWD/node_modules/@slack/client/index.js",
    "mocha": "mocha --recursive --reporter spec test",
    "test": "npm run mocha && npm run lint"
  },
  "version": "3.14.1"
}
