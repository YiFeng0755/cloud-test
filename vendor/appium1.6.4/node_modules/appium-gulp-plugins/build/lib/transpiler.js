"use strict";
var babel = require('gulp-babel'),
    replace = require('gulp-replace'),
    rename = require('gulp-rename'),
    _ = require('lodash'),
    streamCombiner = require('./stream-combiner'),
    sourcemaps = require('gulp-sourcemaps'),
    path = require('path');

var BABEL_OPTS = {
  blacklist: ['react'],
  optional: ['runtime'],
  modules: 'common',
  stage: 1,
  sourceMaps: true
};

var SOURCEMAP_OPTS = {
  sourceRoot: function sourceRoot(file) {
    // eslint-disable-line babel/object-shorthand
    // Point to source root relative to the transpiled file
    return path.relative(path.join(file.cwd, file.path), file.base);
  }
};

var HEADER = 'require(\'source-map-support\').install();\n\n';

var renameEsX = function renameEsX() {
  return rename(function (path) {
    path.basename = path.basename.replace(/\.es[67]$/, '');
  });
};

module.exports = function (opts) {
  opts = opts || {};
  this.babelOpts = _.merge({}, BABEL_OPTS, opts.babelOpts);
  this.sourceMapOpts = _.merge({}, SOURCEMAP_OPTS, opts.sourceMapOpts);

  if (opts.flow) this.babelOpts.blacklist.push('flow');
  this.header = HEADER;
  this.stream = (function () {
    return streamCombiner((function (source) {
      return source.pipe(sourcemaps.init()).pipe(babel(this.babelOpts)).pipe(replace(/\/\/\s+transpile:(main|mocha)\s*/g, this.header)).pipe(renameEsX()).pipe(sourcemaps.write(this.sourceMapOpts));
    }).bind(this));
  }).bind(this);
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90cmFuc3BpbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7SUFDN0IsT0FBTyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUM7SUFDakMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7SUFDL0IsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDckIsY0FBYyxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztJQUM3QyxVQUFVLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0lBQ3ZDLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7O0FBRTNCLElBQUksVUFBVSxHQUFHO0FBQ2YsV0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDO0FBQ3BCLFVBQVEsRUFBRSxDQUFDLFNBQVMsQ0FBQztBQUNyQixTQUFPLEVBQUUsUUFBUTtBQUNqQixPQUFLLEVBQUUsQ0FBQztBQUNSLFlBQVUsRUFBRSxJQUFJO0NBQ2pCLENBQUM7O0FBRUYsSUFBSSxjQUFjLEdBQUc7QUFDbkIsWUFBVSxFQUFFLG9CQUFVLElBQUksRUFBRTs7O0FBRTFCLFdBQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNqRTtDQUNGLENBQUM7O0FBRUYsSUFBSSxNQUFNLEdBQUcsZ0RBQWdELENBQUM7O0FBRTlELElBQUksU0FBUyxHQUFHLFNBQVosU0FBUyxHQUFlO0FBQzFCLFNBQU8sTUFBTSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQzVCLFFBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3hELENBQUMsQ0FBQztDQUNKLENBQUM7O0FBRUYsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLElBQUksRUFBRTtBQUMvQixNQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQUNsQixNQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDekQsTUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxjQUFjLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDOztBQUVyRSxNQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3JELE1BQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLE1BQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQSxZQUFZO0FBQ3hCLFdBQU8sY0FBYyxDQUFDLENBQUEsVUFBVSxNQUFNLEVBQUU7QUFDdEMsYUFBTyxNQUFNLENBQ1YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUNyQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLG1DQUFtQyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUMvRCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7S0FDL0MsQ0FBQSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0dBQ2YsQ0FBQSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUNkLENBQUMiLCJmaWxlIjoibGliL3RyYW5zcGlsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBiYWJlbCA9IHJlcXVpcmUoJ2d1bHAtYmFiZWwnKSxcbiAgICByZXBsYWNlID0gcmVxdWlyZSgnZ3VscC1yZXBsYWNlJyksXG4gICAgcmVuYW1lID0gcmVxdWlyZSgnZ3VscC1yZW5hbWUnKSxcbiAgICBfID0gcmVxdWlyZSgnbG9kYXNoJyksXG4gICAgc3RyZWFtQ29tYmluZXIgPSByZXF1aXJlKCcuL3N0cmVhbS1jb21iaW5lcicpLFxuICAgIHNvdXJjZW1hcHMgPSByZXF1aXJlKCdndWxwLXNvdXJjZW1hcHMnKSxcbiAgICBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG52YXIgQkFCRUxfT1BUUyA9IHtcbiAgYmxhY2tsaXN0OiBbJ3JlYWN0J10sXG4gIG9wdGlvbmFsOiBbJ3J1bnRpbWUnXSxcbiAgbW9kdWxlczogJ2NvbW1vbicsXG4gIHN0YWdlOiAxLFxuICBzb3VyY2VNYXBzOiB0cnVlLFxufTtcblxudmFyIFNPVVJDRU1BUF9PUFRTID0ge1xuICBzb3VyY2VSb290OiBmdW5jdGlvbiAoZmlsZSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGJhYmVsL29iamVjdC1zaG9ydGhhbmRcbiAgICAvLyBQb2ludCB0byBzb3VyY2Ugcm9vdCByZWxhdGl2ZSB0byB0aGUgdHJhbnNwaWxlZCBmaWxlXG4gICAgcmV0dXJuIHBhdGgucmVsYXRpdmUocGF0aC5qb2luKGZpbGUuY3dkLCBmaWxlLnBhdGgpLCBmaWxlLmJhc2UpO1xuICB9LFxufTtcblxudmFyIEhFQURFUiA9ICdyZXF1aXJlKFxcJ3NvdXJjZS1tYXAtc3VwcG9ydFxcJykuaW5zdGFsbCgpO1xcblxcbic7XG5cbnZhciByZW5hbWVFc1ggPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiByZW5hbWUoZnVuY3Rpb24gKHBhdGgpIHtcbiAgICBwYXRoLmJhc2VuYW1lID0gcGF0aC5iYXNlbmFtZS5yZXBsYWNlKC9cXC5lc1s2N10kLywgJycpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9wdHMpIHtcbiAgb3B0cyA9IG9wdHMgfHwge307XG4gIHRoaXMuYmFiZWxPcHRzID0gXy5tZXJnZSh7fSwgQkFCRUxfT1BUUywgb3B0cy5iYWJlbE9wdHMpO1xuICB0aGlzLnNvdXJjZU1hcE9wdHMgPSBfLm1lcmdlKHt9LCBTT1VSQ0VNQVBfT1BUUywgb3B0cy5zb3VyY2VNYXBPcHRzKTtcblxuICBpZiAob3B0cy5mbG93KSB0aGlzLmJhYmVsT3B0cy5ibGFja2xpc3QucHVzaCgnZmxvdycpO1xuICB0aGlzLmhlYWRlciA9IEhFQURFUjtcbiAgdGhpcy5zdHJlYW0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHN0cmVhbUNvbWJpbmVyKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBzb3VyY2VcbiAgICAgICAgLnBpcGUoc291cmNlbWFwcy5pbml0KCkpXG4gICAgICAgICAgLnBpcGUoYmFiZWwodGhpcy5iYWJlbE9wdHMpKVxuICAgICAgICAgIC5waXBlKHJlcGxhY2UoL1xcL1xcL1xccyt0cmFuc3BpbGU6KG1haW58bW9jaGEpXFxzKi9nLCB0aGlzLmhlYWRlcikpXG4gICAgICAgICAgLnBpcGUocmVuYW1lRXNYKCkpXG4gICAgICAgIC5waXBlKHNvdXJjZW1hcHMud3JpdGUodGhpcy5zb3VyY2VNYXBPcHRzKSk7XG4gICAgfS5iaW5kKHRoaXMpKTtcbiAgfS5iaW5kKHRoaXMpO1xufTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
